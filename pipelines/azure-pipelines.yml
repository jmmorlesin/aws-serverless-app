# TODO: create CI pipelines (unit tests and local selenium tests)

# TODO: create CD pipelines for deploying to S3, Lambda, API Gateway and Route 53 with 3 environments (qa, staging production) and tested end-to-end

trigger: 
- master

pool:
  vmImage: 'ubuntu-latest'

workspace:
  clean: all

variables:
- group: AwsCredentials

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: DownloadSecureFile@1
  name: "tfconfig"
  displayName: 'Downlaod secure aws-s3-backend.tfconfig file'
  inputs:
    secureFile: aws-s3-backend.tfconfig

- task: DownloadSecureFile@1
  name: "tfvars"
  displayName: 'Downlaod secure terraform.tfvars file'
  inputs:
    secureFile: terraform.tfvars

- script: |
    cp $(tfconfig.secureFilePath) terraform/aws-s3-backend.tfconfig
    cp $(tfvars.secureFilePath) terraform/terraform.tfvars
  displayName: Copy secure files to terraform directory

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
  displayName: 'Install Terraform 0.12.25'
  inputs:
    terraformVersion: 0.12.25

- script: |    
    terraform init -backend-config="aws-s3-backend.tfconfig"
    terraform validate
    terraform plan -out default.tfplan
    terraform apply "default.tfplan"
  displayName: Run Terraform POC environment
  workingDirectory: terraform
  env: 
    AWS_ACCESS_KEY_ID: $(aws_access_key_id)
    AWS_SECRET_ACCESS_KEY: $(aws_secret_access_key)
    AWS_DEFAULT_REGION: $(region)
  
# - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
#   displayName: 'Terraform : aws'
#   inputs:
#     provider: aws
#     workingDirectory: '$(Build.SourcesDirectory/terraform'
#     backendServiceAWS: 'mirek-aws'
#     backendAWSBucketName: 'miroslawmajka-tfstate'
#     backendAWSKey: tfstate.json