# TODO: create CI pipelines (unit tests and local selenium tests)

# TODO: create CD pipelines for deploying to S3, Lambda, API Gateway and Route 53 with 3 environments (qa, staging production) and tested end-to-end

trigger: 
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: BuildAwsInfrastrcture
  displayName: Build AWS Infrastrcture

  variables:
    - group: AwsCredentials

  jobs:
  - job: RunTerraform
    displayName: Run Terraform 

    steps:
    - task: DownloadSecureFile@1
      name: "tfconfig"
      displayName: 'Downlaod secure aws-s3-backend.tfconfig file'
      inputs:
        secureFile: aws-s3-backend.tfconfig

    - task: DownloadSecureFile@1
      name: "tfvars"
      displayName: 'Downlaod secure terraform.tfvars file'
      inputs:
        secureFile: terraform.tfvars

    - script: |
        cp $(tfconfig.secureFilePath) terraform/aws-s3-backend.tfconfig
        cp $(tfvars.secureFilePath) terraform/terraform.tfvars
      displayName: Copy secure files to terraform directory

    # Third-party task from the Marketplace
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: 0.12.25

    - script: |    
        terraform init -backend-config="aws-s3-backend.tfconfig"
        terraform validate
        terraform plan -out default.tfplan
        terraform apply "default.tfplan"
      displayName: Create default environment
      workingDirectory: terraform
      env: 
        AWS_ACCESS_KEY_ID: $(aws_access_key_id)
        AWS_SECRET_ACCESS_KEY: $(aws_secret_access_key)
        AWS_DEFAULT_REGION: $(region)

    - script: |    
        terraform destroy -auto-approve
      displayName: Destroy default environment
      workingDirectory: terraform
      env: 
        AWS_ACCESS_KEY_ID: $(aws_access_key_id)
        AWS_SECRET_ACCESS_KEY: $(aws_secret_access_key)
        AWS_DEFAULT_REGION: $(region)     

    # TODO: this works in Releases but not in Pipelines
    # - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
    #   displayName: 'Terraform : aws'
    #   inputs:
    #     provider: aws
    #     workingDirectory: '$(Build.SourcesDirectory/terraform'
    #     backendServiceAWS: 'mirek-aws'
    #     backendAWSBucketName: 'miroslawmajka-tfstate'
    #     backendAWSKey: tfstate.json