{
	"info": {
		"_postman_id": "dac02736-3948-4cf0-93e7-43992f5f43b1",
		"name": "AwsServerlessAppApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Node Hello",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f2080f21-6777-4a23-898f-b2c6aa978071",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");    \r",
							"});\r",
							"\r",
							"pm.test(\"Response body contains hello message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.success).to.eql(true);\r",
							"    pm.expect(jsonData.message).to.eql(\"Hello from Lambda Node!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{apiUrl}}/hello-node",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"hello-node"
					]
				}
			},
			"response": []
		},
		{
			"name": "Node Lottery",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9780d909-581e-4fb5-8042-8f345d24d300",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response body contains lottery numbers\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.own.property('success');\r",
							"    pm.expect(jsonData).to.have.own.property('message');\r",
							"\r",
							"    pm.expect(jsonData.success).to.eql(true);\r",
							"    \r",
							"    pm.expect(jsonData.message).to.have.own.property('text');    \r",
							"    pm.expect(jsonData.message.text).to.be.a('string');\r",
							"\r",
							"    pm.expect(jsonData.message).to.have.own.property('numbers');    \r",
							"    pm.expect(jsonData.message.numbers).to.be.an('array');\r",
							"\r",
							"    jsonData.message.numbers.forEach(n => {\r",
							"        pm.expect(n).to.be.a('number');\r",
							"    });\r",
							"\r",
							"    var numbers = jsonData.message.numbers;\r",
							"    var expectedText = `${numbers.slice(0, 5).join(' ')} [${numbers[5]}]`;\r",
							"\r",
							"    pm.expect(jsonData.message.text).to.eql(expectedText);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{apiUrl}}/lottery-node",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"lottery-node"
					]
				}
			},
			"response": []
		},
		{
			"name": "Python Hello",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db563a14-f3c1-43a5-a262-b5893073a23f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response body contains hello message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.success).to.eql(true);\r",
							"    pm.expect(jsonData.message).to.eql(\"Hello from Lambda Python!\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{apiUrl}}/hello-python",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"hello-python"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}